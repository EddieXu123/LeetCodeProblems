/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class findLeavesOfBinaryTree {
    public List<List<Integer>> findLeaves(TreeNode root) {
        List<List<Integer>> answer = new ArrayList<>();
        dfs(root, answer);
        return answer;
    }
    
    public int dfs(TreeNode root, List<List<Integer>> answer) {
        if (root == null) return -1;
        int height = 1 + Math.max(dfs(root.left, answer), dfs(root.right, answer));
        if (height == answer.size()) answer.add(new ArrayList<>());
        answer.get(height).add(root.val);
        return height;
    }
}
